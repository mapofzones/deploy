 apiVersion: apps/v1
 kind: Deployment
 metadata:
   name: injective-watcher-deploy
   labels:
     app: injective-watcher-app
 spec:
   selector:
     matchLabels:
       app: injective-watcher-app

   replicas: 3
   strategy:
     type: RollingUpdate
     rollingUpdate:
       maxSurge: 2
       maxUnavailable: 0
   template:
     metadata:
       labels:
         app: injective-watcher-app
     spec:
       affinity:
         podAntiAffinity:
           requiredDuringSchedulingIgnoredDuringExecution:
           - labelSelector:
               matchExpressions:
               - key: app
                 operator: In
                 values:
                 - injective-watcher-app
             topologyKey: "kubernetes.io/hostname"
       hostAliases:
       - ip: "159.89.250.255"
         hostnames:
         - "api.mapofzones.com"
       containers:

       - name: injective-1
         image: registry.digitalocean.com/mapofzones/cosmos-watcher-injective:8c1377c0
         env:
           - name: chain_id
             value: "injective-1"
           - name: rabbitmq
             valueFrom:
               secretKeyRef:
                 name: prodsecret
                 key: watcher_rabbitmq
           - name: graphql
             valueFrom:
               secretKeyRef:
                 name: prodsecret
                 key: db_graphql
           - name: queue
             value: "blocks_v3_2"
         imagePullPolicy: Always
         resources:
           requests:
             memory: "100Mi"
             cpu: "50m"
           limits:
             memory: "256Mi"
             cpu: "100m"
